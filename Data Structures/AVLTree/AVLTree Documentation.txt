Public member functions:

    Constructor (no parameters)
        O(1) time complexity
        Does not throw exceptions

    Destructor (no parameters)
        O(n) time complexity
        Does not throw exceptions

    Copy Constructor - AVLTree(const AVLTree& original);
        O(n) time complexity
        Throws bad_alloc

    operator= - AVLTree& operator=(const AVLTree& original);
        O(n) time complexity
        Throws bad_alloc

    insert - void insert(const T& data);
        Inserts an element into the tree
        O(logn) time complexity
        throws bad_alloc, DataManagerExceptions::ObjectAlreadyExists

    remove - void remove(const T& data);
        Removes an element from the tree
        O(logn) time complexity
        throws DataManagerExceptions::ObjectUnfound

    find - virtual T& find(const T& data) const;
        Returns an element from the tree
        O(logn) time complexity
        throws DataManagerExceptions::ObjectUnfound
        NOTE: particularly useful for classes whose comparison operators only compare one element of class.
            For instance, you can retrieve a particular DataCenter by using "find" with an empty DataCenter
            you created whose ID matches the DataCenter you're trying to retrieve (assuming comparison operators
            compare by ID)

    getInOrder - Array<T> getInOrder() const;
        Returns Array of all elements in tree (note: Array has operator[] and int getSize() functions)
        O(n) time complexity
        throws bad_alloc

    *NEW*
    getPartialSum - int getPartialSum(const T& data) const;
        Returns the sum of all elements of the tree less than data, including data
        O(logn) time complexity (O(logn) to find the element, O(1) to obtain its sum.  So could be less, if important)
       throws DataManagerExceptions::ObjectUnfound

    getRelativeIndex - unsigned int getRelativeIndex(const T& data) const;
        Returns the number of elements in the tree whose value is less than (and unequal to) data
        (i.e. the index of data in the array you would get from call to getInOrder)
        O(logn) time complexity (O(logn) to find the element, O(1) to obtain its index.  So could be less, if important)
        throws DataManagerExceptions::ObjectUnfound

    operator[] - T& operator[](unsigned int index);
        Inverse of getRelativeIndex, returns the element with relative index requested in argument.
        O(logn) time complexity
        throws DataManagerExceptions::ObjectUnfound

    merge - virtual BinarySearchTree merge(const BinarySearchTree& tree);
        Merges 2 trees into a single almost-complete binary search tree
        O(n) time complexity
        throws bad_alloc

Dependencies:
    1. AVLTree assumes data type T will implement operator== and operator> in O(1) time complexity
    *NEW* requires default constructor (with throwaway value) (required to use merge)
    2. AVLTree assumes data type T will implement default constructor, copy constructor, operator=, and destructor in O(1) time complexity
    *NEW*
    3. AVLTree assumes data type T will implement operator+ (only for purposes of sums)